// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  client
  organizer
  admin
}

model User {
  id        String   @id @default(uuid())
  name      String
  username  String
  email     String   @unique
  password  String
  userRole      UserRole

  Event Event[] @relation("OrganizerEvents")
  

  Booking Booking[]
}

model Event {
  id                 String   @id @default(uuid())
  title              String
  type               EventType
  duration           String?
  genre              String?
  director           String?
  cast              String?
  poster            String?
  cardImage          String?
  ticketPriceNormal String
  ticketPriceVip    String
  date              DateTime?
  venue             String?
  artist            String?
  createdDate       DateTime @default(now())
  description       String?
  totalSeats        String[]
  totalTicketsSold  String?
  
  organizerId       String

  organizer User @relation("OrganizerEvents", fields: [organizerId], references: [id], onDelete: Cascade)
  bookings  Booking[]
}

enum EventType {
  MOVIE
  CONCERT
  OTHERS
}

model Booking {
  id        String   @id @default(uuid())
  quantity  Int
  bookedAt  DateTime @default(now())
  seats     String[]
  price     Float 

  clientId  String
  eventId   String

  client    User     @relation(fields: [clientId], references: [id], onDelete: Cascade)
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@index([clientId])
  @@index([eventId])
}